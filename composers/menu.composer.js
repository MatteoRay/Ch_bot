const { Composer, Markup } = require('telegraf')
const composer = new Composer()
const lib =  require('../modules/lib')

composer.hears('–ú–æ—Å–∫–≤–∞', async (ctx) => {
  try {
    await ctx.reply(ctx.i18n.t('moscow'), Markup.keyboard(
        [
          Markup.button.callback('üõã 1590—Ä'),
          Markup.button.callback('üõã 1990—Ä'),
          Markup.button.callback('–£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å')
        ]).resize())
      } catch (e) {
        console.error(e)
      }
    })



    composer.hears('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', async (ctx) => {
      try {
        await ctx.reply(ctx.i18n.t('spb'), Markup.keyboard(
            [
              Markup.button.callback('üõã 1590—Ä'),
              Markup.button.callback('üõã 1990—Ä'),
              Markup.button.callback('–£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å')
            ]).resize())
          } catch (e) {
            console.error(e)
          }
    })
        
    composer.hears('–£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å', async (ctx) => {
      try {
        await ctx.reply(ctx.i18n.t('vopros'), Markup.keyboard(
        [
          Markup.button.callback('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'),
        ]).resize())
          } catch (e) {
            console.error(e)
          }
        })

module.exports = composer